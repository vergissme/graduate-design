<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.nfchats.dao.FriendshipDao">
    <insert id="addFriend">
        INSERT INTO friendship (`user_id_1`, `user_id_2`, `status`)
        VALUES (#{user_id},#{userid2}, 'accepted')

    </insert>
    <delete id="delFriends">
        DELETE FROM friendship
        WHERE (`user_id_1` = #{params.user_id} AND `user_id_2` = #{params.friendshipId})
           OR (`user_id_1` = #{params.friendshipId} AND `user_id_2` = #{params.user_id});
    </delete>
    <!--展示所有好友-->
    <select id="getFriendship" resultType="org.example.nfchats.entity.Admin">
        SELECT *
        FROM user u
        JOIN (
        SELECT DISTINCT user_id_2 AS friend_id
        FROM friendship
        WHERE user_id_1 = #{ params.user_id }
        UNION
        SELECT DISTINCT user_id_1 AS friend_id
        FROM friendship
        WHERE user_id_2 = #{ params.user_id }
        ) AS friends ON u.user_id = friends.friend_id
        WHERE u.user_id != #{ params.user_id }
    </select>



    <select id="checkFriendship" resultType="java.lang.Integer">
        SELECT COUNT(*) as friendship_count
        FROM `friendship`
        WHERE (`user_id_1` = #{user_id} AND `user_id_2` = #{userid2})
           OR (`user_id_1` = #{userid2} AND `user_id_2` = #{user_id})
    </select>

    <select id="getuserid" resultType="java.lang.Integer">
        select user_id from user where username=#{username}
    </select>

</mapper>